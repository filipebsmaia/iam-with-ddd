version: '3'

services:
  pg:
    image: postgres:15.0
    hostname: pg
    container_name: pg
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: postgres
      version: '3.8'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.2.1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '7071:7071'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_OPTS: '-javaagent:/jmx/jmx_prometheus_javaagent-1.3.0.jar=7071:/jmx/kafka-metrics.yml'
    volumes:
      - './_docker/jmx/:/jmx/'

  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka:
              properties:
                bootstrap.servers: "broker:29092"
    depends_on:
      - broker
    ports:
      - 8080:8080
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3080:3000'
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./_docker/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    depends_on:
      - prometheus
      - loki
      - tempo
      - otel-collector

  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./_docker/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  loki:
    image: grafana/loki:latest
    ports:
      - '3100:3100'
    volumes:
      - ./_docker/loki-config.yml:/etc/loki/loki-config.yml
    command: -config.file=/etc/loki/loki-config.yml

  tempo:
    image: grafana/tempo:latest
    ports:
      - '3200:3200' # Tempo HTTP API
      - '4317' # OTLP gRPC
      # - '4318:4318' # OTLP HTTP
    volumes:
      - ./_docker/tempo-config.yml:/etc/tempo/tempo.yml
    command: ['-config.file=/etc/tempo/tempo.yml']

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ['--config=/etc/otel/config.yaml']
    volumes:
      - ./_docker/otel-config.yaml:/etc/otel/config.yaml
    ports:
      - '4317:4317' # OTLP gRPC
      - '4318:4318' # OTLP HTTP
      - '8889:8889' # Prometheus scrape endpoint
      - '55679:55679' # zPages (debug)
    depends_on:
      - loki
      - tempo
      - prometheus
